{"ast":null,"code":"var _jsxFileName = \"/Users/brianvagnini/projects/code/learning/pirple/reactCrashCourse/master-react/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Clscom } from './Clscom';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {\n    contentdata: \"some data from index.js, courtesy of App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {\n  contentdata: \"Some other data, changed from previous props, courtesy of App\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 18\n}, this), document.getElementById('data2')); //Another way to write out the render statement\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Clscom, {\n  classdata: \"data from the class component, via classdata prop\",\n  newProp: \"New component data via newProp prop\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 17\n}, this), document.getElementById('Clscom')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["/Users/brianvagnini/projects/code/learning/pirple/reactCrashCourse/master-react/src/index.js"],"names":["React","ReactDOM","App","Clscom","reportWebVitals","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAAQC,MAAR,QAAsB,UAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEAH,QAAQ,CAACI,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAK,IAAA,WAAW,EAAG;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAOAN,QAAQ,CAACI,MAAT,eAAiB,QAAC,GAAD;AAAK,EAAA,WAAW,EAAG;AAAnB;AAAA;AAAA;AAAA;AAAA,QAAjB,EAAuGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAvG,E,CAEA;;AACAN,QAAQ,CAACI,MAAT,eAAgB,QAAC,MAAD;AAAQ,EAAA,SAAS,EAAG,mDAApB;AAAwE,EAAA,OAAO,EAAG;AAAlF;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAmJC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAnJ,E,CAGA;AACA;AACA;;AACAH,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Clscom,} from './Clscom';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App contentdata = \"some data from index.js, courtesy of App\"/> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nReactDOM.render (<App contentdata = \"Some other data, changed from previous props, courtesy of App\"/>, document.getElementById('data2'));\n\n//Another way to write out the render statement\nReactDOM.render(<Clscom classdata = \"data from the class component, via classdata prop\" newProp = \"New component data via newProp prop\"></Clscom>, document.getElementById('Clscom'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}